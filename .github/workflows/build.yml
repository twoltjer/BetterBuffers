name: Build and Publish

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0.x', '8.0.x', '9.0.x']

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release --no-restore
    
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal
    
    - name: Create packages
      if: matrix.dotnet-version == '8.0.x' && (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))
      run: dotnet pack --configuration Release --no-build --output ./packages
    
    - name: Upload packages as artifacts
      if: matrix.dotnet-version == '8.0.x' && (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))
      uses: actions/upload-artifact@v3
      with:
        name: packages
        path: ./packages/*.nupkg

  publish:
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    
    steps:
    - name: Download packages
      uses: actions/download-artifact@v3
      with:
        name: packages
        path: ./packages
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
    
    - name: Publish to NuGet
      run: dotnet nuget push "./packages/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
